package org.cafe.views.budget;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.cafe.database.controllers.BudgetController;
import org.cafe.models.budget.BudgetModel;
import org.cafe.views.budget.components.manager_budget.ManagerBudgetView;

public class BudgetView extends javax.swing.JFrame {
  private final BudgetController budgetController;
  private ArrayList<BudgetModel> budgets;

  /**
   * Construtor.
   *
   * @param budgetController Controlador de orçamentos.
   */
  public BudgetView(
          BudgetController budgetController
  ) {
    this.budgetController = budgetController;

    initComponents();

    listBudgets();
  }

  /**
   * Lista todos os orçamentos.
   */
  private void listBudgets() {
    budgets = budgetController.getAll();
    DefaultListModel<String> model = new DefaultListModel<>();
    budgetList.setModel(model);

    for (BudgetModel budget : budgets) {
      String displayText = String.format("Nome: %s | Categoria: %s | Status: %s", budget.getName(), budget.getCategory(), budget.getStatus());

      model.addElement(displayText);
    }
  }

  /**
   * Atualiza a lista de orçamentos para exibir somente os orçamentos que
   * existem.
   */
  private void updateScreen() {
    DefaultListModel<String> model = new DefaultListModel<>();
    budgetList.setModel(model);
    model.clear();
    listBudgets();
  }

  private boolean verifyRecords(
          String actionName
  ) {
    // Verifica se existe registros.
    if (budgets.isEmpty()) {
      JOptionPane.showMessageDialog(
              null,
              String.format("Não há registros para %s.", actionName),
              "Aviso",
              JOptionPane.WARNING_MESSAGE
      );

      return false;
    }

    // Verifica se um registro foi selecionado.
    int selectedIndex = budgetList.getSelectedIndex();
    if (selectedIndex == -1) {
      JOptionPane.showMessageDialog(
              null,
              "Por favor, selecione um registro.",
              "Aviso",
              JOptionPane.WARNING_MESSAGE
      );

      return false;
    }

    return true;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    background = new javax.swing.JPanel();
    screenTitle = new javax.swing.JLabel();
    exitButton = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    budgetList = new javax.swing.JList<>();
    deleteButton = new javax.swing.JButton();
    updateButton = new javax.swing.JButton();
    addButton = new javax.swing.JButton();
    updateButton1 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    background.setBackground(new java.awt.Color(255, 255, 255));

    screenTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    screenTitle.setForeground(new java.awt.Color(0, 0, 0));
    screenTitle.setText("Orçamentos");

    exitButton.setForeground(new java.awt.Color(255, 0, 51));
    exitButton.setText("Sair");
    exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        exitButtonMouseClicked(evt);
      }
    });

    budgetList.setBorder(null);
    jScrollPane1.setViewportView(budgetList);

    deleteButton.setForeground(new java.awt.Color(255, 0, 51));
    deleteButton.setText("Excluir");
    deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        deleteButtonMouseClicked(evt);
      }
    });

    updateButton.setText("Atualizar");
    updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        updateButtonMouseClicked(evt);
      }
    });
    updateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateButtonActionPerformed(evt);
      }
    });

    addButton.setText("Adicionar");
    addButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        addButtonMouseClicked(evt);
      }
    });

    updateButton1.setText("Acessar");
    updateButton1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        updateButton1MouseClicked(evt);
      }
    });
    updateButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateButton1ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
    background.setLayout(backgroundLayout);
    backgroundLayout.setHorizontalGroup(
      backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(backgroundLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(updateButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(updateButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(deleteButton))
          .addGroup(backgroundLayout.createSequentialGroup()
            .addComponent(exitButton)
            .addGap(34, 34, 34)
            .addComponent(screenTitle)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
            .addComponent(addButton)))
        .addContainerGap())
      .addComponent(jScrollPane1)
    );
    backgroundLayout.setVerticalGroup(
      backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(backgroundLayout.createSequentialGroup()
        .addGap(19, 19, 19)
        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(screenTitle)
          .addComponent(exitButton)
          .addComponent(addButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(deleteButton)
          .addComponent(updateButton)
          .addComponent(updateButton1))
        .addContainerGap(267, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
    this.dispose();
  }//GEN-LAST:event_exitButtonMouseClicked

  private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
    if (verifyRecords("excluir")) {
      // Confirmar remoção de registro.
      int confirm = JOptionPane.showConfirmDialog(
              null,
              "Você realmente deseja excluir este registro?",
              "Confirmar Exclusão",
              JOptionPane.YES_NO_OPTION,
              JOptionPane.WARNING_MESSAGE
      );

      // Se o usuário confirmar, exclui o registro.
      if (confirm == JOptionPane.YES_OPTION) {
        BudgetModel selectedExpense = budgets.get(budgetList.getSelectedIndex());
        budgetController.removeById(selectedExpense.getId());

        updateScreen();
      }
    }
  }//GEN-LAST:event_deleteButtonMouseClicked

  private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
    if (verifyRecords("atualizar")) {
      BudgetModel selectedExpense = budgets.get(budgetList.getSelectedIndex());
      ManagerBudgetView updateManagerBudgetView = new ManagerBudgetView(budgetController, selectedExpense, this::updateScreen);

      updateManagerBudgetView.setVisible(true);
    }
  }//GEN-LAST:event_updateButtonMouseClicked

  private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
    ManagerBudgetView createManagerBudgetView = new ManagerBudgetView(budgetController, null, this::updateScreen);

    createManagerBudgetView.setVisible(true);
  }//GEN-LAST:event_addButtonMouseClicked

  private void updateButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButton1MouseClicked
    // TODO add your handling code here:
  }//GEN-LAST:event_updateButton1MouseClicked

  private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_updateButtonActionPerformed

  private void updateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton1ActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_updateButton1ActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addButton;
  private javax.swing.JPanel background;
  private javax.swing.JList<String> budgetList;
  private javax.swing.JButton deleteButton;
  private javax.swing.JLabel exitButton;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel screenTitle;
  private javax.swing.JButton updateButton;
  private javax.swing.JButton updateButton1;
  // End of variables declaration//GEN-END:variables
}
